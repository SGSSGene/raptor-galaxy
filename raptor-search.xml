<tool id="raptor-search" name="Raptor: A fast and space-efficient pre-filter for querying very large collections of nucleotide sequences" version="2.0.0+1" python_template_version="3.5">
    <requirements>
        <requirement type="package" version="2.0.0">raptor</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ln -s '${query}' query.fasta;
        param=""
        #if $threshold
            param="\${param} --threshold ${threshold}"
        #end if
        #if $tau
            param="\${param} --tau ${tau}"
        #end if
        #if $pattern
            param="\${param} --pattern ${pattern}"
        #end if

        raptor search --index '${index}' --query query.fasta \${param} --output results.txt;
    ]]></command>
    <inputs>
        <param name="threads" type="integer" value="1" min="1" />
        <param name="index" type="data" format="binary" />
        <param name="query" type="data" format="fasta" />
        <param name="error" type="integer" value="0" min="0" />
        <param name="tau" type="float" value="0.99" min="0" max="1" />
        <param name="threshold" type="float" value="0" min="0" max="1" optional="true" />
        <param name="pattern" type="integer" optional="true"/>
    </inputs>
    <outputs>
        <data name="results" format="txt" from_work_dir="results.txt" />
    </outputs>
    <tests>
        <test>
            <param name="index" value="test_expected.index" />
            <param name="query" value="query.fasta" />
            <output name="results" file="expected_query_results.txt" />
        </test>
    </tests>
    <help><![CDATA[Raptor - A fast and space-efficient pre-filter for querying very large collections of nucleotide sequences.
    ]]></help>
    <citations>
        <citation type="bibtex">
@misc{githubraptor,
  author = {LastTODO, FirstTODO},
  year = {TODO},
  title = {raptor},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/seqan/raptor},
}</citation>
    </citations>
</tool>
